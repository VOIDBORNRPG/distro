{
	"credit": "Made with Blockbench",
	"textureSize": [64, 32],
	"models": [
		{
			"part": "head",
			"id": "head",
			"invertAxis": "xy",
			"translate": [0, -7, 9],
			"textureSize": [64, 32],
			"submodels": [
				{
					"id": "Created_by_FreshLX_for_Fresh_Animations",
					"invertAxis": "xy",
					"translate": [0, 7, -9],
					"submodels": [
						{
							"id": "Compat_by_ithan",
							"invertAxis": "xy",
							"translate": [0, 0, 0]
						}
					]
				}
			],
			"animations": [
				{
					"var.r": "random(id)*pi*4",
					"var.b": "var.r +age/30*pi*2",
					"var.ls": "limb_swing*1.9",
					"var.als": "var.r+ age/17*pi*2 +limb_swing/2",
					"var.die": "if(!is_alive, if(is_hurt, (cos(hurt_time/4)/1.8 +0.4), 1), 0)",
					"var.air": "clamp(if(!is_on_ground||(pos_y-var.jump)*var.air!=0, min(20, var.air +0.3 *frame_time*20), max(0, var.air -0.1 *frame_time*20)), 0, 1)",
					"var.aggroA": "clamp(if(is_aggressive || swing_progress!=0, min(20, var.aggroA +0.08 *frame_time*20), max(0, var.aggroA -0.1 *frame_time*20)), 0, 1)",
					"var.aggro": "(0.5-0.5*cos( var.aggroA*pi ))"
				},
				{
					"right_jaw.tx": "if(is_alive, -2 +(0.2 -sin(var.r +age/4*pi*2)/4)*clamp(-1.5 +sin(age/13*1.3+var.r)*4 -cos(age/37*1.3+var.r)*4, 0, 1), -1.5) -sin(pi*2*swing_progress)",
					"left_jaw.tx": "-right_jaw.tx",
					"head2.rx": "torad(15)+sin(var.b-torad(45))/40 +torad(head_pitch)/4 +if(is_hurt, sin(hurt_time/10*pi), 0) +(torad( 20))*var.die",
					"head2.ry": "clamp(torad(head_yaw)/4, torad(-17), torad( 17))",
					"head2.rz": "sin(torad(45)+var.ls)/15*limb_speed",
					"head2.tz": "-6.5",
					"body0.rx": "torad(head_pitch)/10 +sin(-pi*swing_progress)/4 +if(is_hurt, -0.5*sin(hurt_time/10*pi)/2, 0) + -0.2*limb_speed/3*var.air",
					"body0.ry": "if(is_ridden, 0, clamp(torad(head_yaw)/3, torad(-45), torad(45)) )",
					"body0.ty": "if(is_alive && is_on_ground, 0.1 * sin(age*0.5)*sin(age*2), 0) + 22 +if(is_ridden, 0, sin(var.b)/8 +(1.5*limb_speed)*(1-var.air) + head_pitch/32) +if(is_hurt, -sin(hurt_time/10*pi)*2, 0) +11.5*var.die",
					"body0.tz": "if(is_alive && is_on_ground, 0.1 * sin(age*0.3)*sin(age*3), 0) - 9.5 + sin(-pi*swing_progress)*4",
					"body0.tx": "if(is_alive && is_on_ground, 0.1 * sin(age*0.4)*sin(age*4), 0) - (head_yaw)/32",
					"body2.rx": "torad(-10) + torad(10 +30*var.aggro +10*limb_speed) +cos(var.b)/40 +torad(head_pitch)/8 +sin(pi*2*swing_progress)/4 +if(is_hurt, -0.5*sin(hurt_time/10*pi)/2, 0) + (torad(-30))*var.die +0.5*if(age>10, -clamp((pos_y-var.jump)*var.air, -pi/4, pi/4), 0)",
					"body2.ry": "if(is_ridden, clamp(-torad(head_yaw)/6, torad(-10), torad( 10)), clamp(-torad(head_yaw)/6, torad(-45), torad(45)))",
					"body2.rz": "sin(torad(135)+var.ls)/10*limb_speed",
					"body2.tz": "-4 +0.5*var.aggro",
					"antenna2.rx": "torad(15)+0.10*sin(age)"
				},
				{
					"left_front_leg.rx": "torad( 30) -(torad(10)*limb_speed)",
					"right_front_leg.rx": "torad( 30) -(torad(10)*limb_speed)",
					"left_front_leg.ry": "torad( 40) +asin(sin(var.ls))/6 * clamp(limb_speed*6, 0, 1)*(1-var.air) +if(is_ridden, 0, clamp(-torad(head_yaw)/10, 0, torad( 10)) +clamp(-torad(head_yaw)/14, torad(-10), 0)) +sin(-pi*swing_progress)/4",
					"right_front_leg.ry": "torad(-40) +asin(sin(var.ls))/6 * clamp(limb_speed*6, 0, 1)*(1-var.air) +if(is_ridden, 0, clamp(-torad(head_yaw)/10, torad(-10), 0) +clamp(-torad(head_yaw)/14, 0, torad( 10))) -sin(-pi*swing_progress)/4",
					"left_front_leg.rz": "torad( 40) +if(is_ridden, 0, -(torad(12)*limb_speed)*(1-var.air)) +torad( 20)*var.air +clamp(sin(torad(-90)+var.ls)/2.2*limb_speed, -pi/3, 0)*(1-var.air) -sin(var.b)/60 -torad(head_pitch)/14 +(torad( 70))*var.die",
					"right_front_leg.rz": "torad(-40) +if(is_ridden, 0,  (torad(12)*limb_speed)*(1-var.air)) +torad(-20)*var.air +clamp(sin(torad(-90)+var.ls)/2.2*limb_speed,  0, pi/3)*(1-var.air) +sin(var.b)/60 +torad(head_pitch)/14 -(torad( 70))*var.die",
					"left_front_leg.tx": "11.5 -3.5*var.air -(9)*var.die",
					"right_front_leg.tx": "-left_front_leg.tx",
					"left_front_leg.ty": "-limb_speed + 26 +1.5*var.air +clamp(sin(torad(-90)+var.ls)*6*limb_speed, -6, 0)*(1-var.air) +11*var.die",
					"right_front_leg.ty": "-limb_speed + 26 +1.5*var.air +clamp(sin(torad( 90)+var.ls)*6*limb_speed, -6, 0)*(1-var.air) +11*var.die",
					"left_front_leg.tz": "-12 -asin(sin(var.ls))*2.5*clamp(limb_speed*6, 0, 1)*(1-var.air)",
					"right_front_leg.tz": "-12 +asin(sin(var.ls))*2.5*clamp(limb_speed*6, 0, 1)*(1-var.air)",
					"leg8_2.rz": "if(age>10, clamp(cos(var.r+ rot_y*9)*(clamp(-(rot_y-var.turn)*2, 0, 1) +clamp((rot_y-var.turn)*2, 0, 1)), -0.3, 0)*clamp(1-limb_speed*4, 0, 1-var.air) +clamp((pos_y-var.jump)*var.air, -pi/4, pi/4), 0) +( sin(var.als)/5)*(1+limb_speed)*var.air",
					"leg7_2.rz": "if(age>10,-clamp(cos(var.r+ rot_y*9)*(clamp(-(rot_y-var.turn)*2, 0, 1) +clamp((rot_y-var.turn)*2, 0, 1)), -0.3, 0)*clamp(1-limb_speed*4, 0, 1-var.air) -clamp((pos_y-var.jump)*var.air, -pi/4, pi/4), 0) +(-sin(var.als)/5)*(1+limb_speed)*var.air",
					"leg8_2.ry": "if(age>10, -asin(sin(var.r+ rot_y*9))/9                                                                           *clamp(1-limb_speed*4, 0, 1-var.air), 0) -(-clamp((pos_y-var.jump), 0, pi/4)/2*limb_speed)*var.air",
					"leg7_2.ry": "if(age>10, -asin(sin(var.r+ rot_y*9))/9                                                                           *clamp(1-limb_speed*4, 0, 1-var.air), 0) +(-clamp((pos_y-var.jump), 0, pi/4)/2*limb_speed)*var.air"
				},
				{
					"left_middle_leg.rx": "torad(10) -(torad(3)*limb_speed)",
					"right_middle_leg.rx": "torad(10) -(torad(3)*limb_speed)",
					"left_middle_leg.ry": "torad( 14) -asin(sin(var.ls))/6*clamp(limb_speed*6, 0, 1)*(1-var.air) +if(is_ridden, 0, clamp(-torad(head_yaw)/10, 0, torad( 10)) +clamp(-torad(head_yaw)/16, torad(-10), 0)) +sin(-pi*swing_progress)/5",
					"right_middle_leg.ry": "torad(-14) -asin(sin(var.ls))/6*clamp(limb_speed*6, 0, 1)*(1-var.air) +if(is_ridden, 0, clamp(-torad(head_yaw)/10, torad(-10), 0) +clamp(-torad(head_yaw)/16, 0, torad( 10))) -sin(-pi*swing_progress)/5",
					"left_middle_leg.rz": "torad( 33) +if(is_ridden, 0, -(torad(10)*limb_speed)*(1-var.air)) +torad( 20)*var.air +clamp(sin(torad( 90)+var.ls)/2.2*limb_speed, -pi/3, 0)*(1-var.air) -sin(var.b)/60 -torad(head_pitch)/30 +(torad( 70))*var.die",
					"right_middle_leg.rz": "torad(-33) +if(is_ridden, 0,  (torad(10)*limb_speed)*(1-var.air)) +torad(-20)*var.air +clamp(sin(torad( 90)+var.ls)/2.2*limb_speed,  0, pi/3)*(1-var.air) +sin(var.b)/60 +torad(head_pitch)/30 -(torad( 70))*var.die",
					"left_middle_leg.tx": "15 -3.5*var.air -(12)*var.die",
					"right_middle_leg.tx": "-left_middle_leg.tx",
					"left_middle_leg.ty": "-limb_speed + 26 +3.5*var.air +clamp(sin(torad( 90)+var.ls)*6*limb_speed, -6, 0)*(1-var.air) +15*var.die",
					"right_middle_leg.ty": "-limb_speed + 26 +3.5*var.air +clamp(sin(torad(-90)+var.ls)*6*limb_speed, -6, 0)*(1-var.air) +15*var.die",
					"left_middle_leg.tz": "-4.7 +asin(sin(var.ls))*2.5*clamp(limb_speed*6, 0, 1)*(1-var.air)",
					"right_middle_leg.tz": "-4.7 -asin(sin(var.ls))*2.5*clamp(limb_speed*6, 0, 1)*(1-var.air)",
					"leg6_2.rz": "if(age>10, clamp(-cos(var.r+ rot_y*9)*(clamp(-(rot_y-var.turn)*2, 0, 1) +clamp((rot_y-var.turn)*2, 0, 1)), -0.3, 0)*clamp(1-limb_speed*4, 0, 1-var.air) +clamp((pos_y-var.jump)*var.air, -pi/4, pi/4), 0) +(-cos(var.als)/5)*(1+limb_speed)*var.air",
					"leg5_2.rz": "if(age>10,-clamp(-cos(var.r+ rot_y*9)*(clamp(-(rot_y-var.turn)*2, 0, 1) +clamp((rot_y-var.turn)*2, 0, 1)), -0.3, 0)*clamp(1-limb_speed*4, 0, 1-var.air) -clamp((pos_y-var.jump)*var.air, -pi/4, pi/4), 0) +( cos(var.als)/5)*(1+limb_speed)*var.air",
					"leg6_2.ry": "if(age>10,   asin(sin(var.r+ rot_y*9))/9                                                                           *clamp(1-limb_speed*4, 0, 1-var.air), 0) -(clamp((pos_y-var.jump), 0, pi/4)*limb_speed)*var.air",
					"leg5_2.ry": "if(age>10,   asin(sin(var.r+ rot_y*9))/9                                                                           *clamp(1-limb_speed*4, 0, 1-var.air), 0) +(clamp((pos_y-var.jump), 0, pi/4)*limb_speed)*var.air"
				},
				{
					"left_hind_leg.rx": "torad(-10) +(torad(3)*limb_speed)",
					"right_hind_leg.rx": "torad(-10) +(torad(3)*limb_speed)",
					"left_hind_leg.ry": "torad(-12) +asin(sin(var.ls))/6*clamp(limb_speed*6, 0, 1)*(1-var.air) +if(is_ridden, 0, clamp(-torad(head_yaw)/10, 0, torad( 10)) +clamp(-torad(head_yaw)/18, torad(-10), 0)) +sin(-pi*swing_progress)/6",
					"right_hind_leg.ry": "torad( 12) +asin(sin(var.ls))/6*clamp(limb_speed*6, 0, 1)*(1-var.air) +if(is_ridden, 0, clamp(-torad(head_yaw)/10, torad(-10), 0) +clamp(-torad(head_yaw)/18, 0, torad( 10))) -sin(-pi*swing_progress)/6",
					"left_hind_leg.rz": "torad( 32) +if(is_ridden, 0, -(torad(10)*limb_speed)*(1-var.air)) +torad( 20)*var.air +clamp(sin(torad(-90)+var.ls)/2.2*limb_speed, -pi/3, 0)*(1-var.air) -sin(var.b)/60 +torad(head_pitch)/30 +(torad( 70))*var.die",
					"right_hind_leg.rz": "torad(-32) +if(is_ridden, 0,  (torad(10)*limb_speed)*(1-var.air)) +torad(-20)*var.air +clamp(sin(torad(-90)+var.ls)/2.2*limb_speed,  0, pi/3)*(1-var.air) +sin(var.b)/60 -torad(head_pitch)/30 -(torad( 70))*var.die",
					"left_hind_leg.tx": "15 -3.5*var.air -(12)*var.die",
					"right_hind_leg.tx": "-left_hind_leg.tx",
					"left_hind_leg.ty": "-limb_speed + 26 +3.5*var.air +clamp(sin(torad(-90)+var.ls)*6*limb_speed, -6, 0)*(1-var.air) +15*var.die",
					"right_hind_leg.ty": "-limb_speed + 26 +3.5*var.air +clamp(sin(torad( 90)+var.ls)*6*limb_speed, -6, 0)*(1-var.air) +15*var.die",
					"left_hind_leg.tz": "3.7 -asin(sin(var.ls))*2.5*clamp(limb_speed*6, 0, 1)*(1-var.air)",
					"right_hind_leg.tz": "3.7 +asin(sin(var.ls))*2.5*clamp(limb_speed*6, 0, 1)*(1-var.air)",
					"leg4_2.rz": "if(age>10, clamp(cos(var.r+ rot_y*9)*(clamp(-(rot_y-var.turn)*2, 0, 1) +clamp((rot_y-var.turn)*2, 0, 1)), -0.3, 0)*clamp(1-limb_speed*4, 0, 1-var.air) +clamp((pos_y-var.jump)*var.air, -pi/4, pi/4), 0) +(-sin(var.als)/5)*(1+limb_speed)*var.air",
					"leg3_2.rz": "if(age>10,-clamp(cos(var.r+ rot_y*9)*(clamp(-(rot_y-var.turn)*2, 0, 1) +clamp((rot_y-var.turn)*2, 0, 1)), -0.3, 0)*clamp(1-limb_speed*4, 0, 1-var.air) -clamp((pos_y-var.jump)*var.air, -pi/4, pi/4), 0) +( sin(var.als)/5)*(1+limb_speed)*var.air",
					"leg4_2.ry": "if(age>10, -asin(sin(var.r+ rot_y*9))/9                                                                           *clamp(1-limb_speed*4, 0, 1-var.air), 0) -(clamp((pos_y-var.jump), 0, pi/4)*limb_speed)*var.air",
					"leg3_2.ry": "if(age>10, -asin(sin(var.r+ rot_y*9))/9                                                                           *clamp(1-limb_speed*4, 0, 1-var.air), 0) +(clamp((pos_y-var.jump), 0, pi/4)*limb_speed)*var.air"
				},
				{
					"var.turn": "var.turn2",
					"var.turn2": "var.turn3",
					"var.turn3": "var.turn4",
					"var.turn4": "var.turn5",
					"var.turn5": "var.turn6",
					"var.turn6": "rot_y",
					"var.jump": "var.jump2",
					"var.jump2": "var.jump3",
					"var.jump3": "var.jump4",
					"var.jump4": "var.jump5",
					"var.jump5": "var.jump6",
					"var.jump6": "var.jump7",
					"var.jump7": "var.jump8",
					"var.jump8": "var.jump9",
					"var.jump9": "var.jump10",
					"var.jump10": "pos_y"
				}
			]
		},
		{
			"part": "antenna",
			"id": "antenna",
			"invertAxis": "xy",
			"translate": [0, -24, 2.5]
		},
		{
			"part": "body0",
			"id": "body0",
			"invertAxis": "xy",
			"translate": [0, -6, 7.5],
			"textureSize": [64, 32],
			"submodels": [
				{
					"id": "head2",
					"invertAxis": "xy",
					"translate": [0, 10, -7],
					"boxes": [
						{"coordinates": [-2.5, -1, -2.5, 5, 2, 3], "textureOffset": [0, 8]}
					],
					"submodels": [
						{
							"id": "antenna2",
							"invertAxis": "xy",
							"translate": [0, 1, -2],
							"boxes": [
								{"coordinates": [-4.5, 0, 0, 9, 2, 0], "textureOffset": [41, 0]}
							]
						}
					]
				},
				{
					"id": "neck",
					"invertAxis": "xy",
					"translate": [0, 10, -5],
					"boxes": [
						{"coordinates": [-3.5, -2, -1.5, 7, 4, 3], "textureOffset": [0, 0]}
					]
				},
				{
					"id": "body2",
					"invertAxis": "xy",
					"translate": [0, 10, -4],
					"boxes": [
						{"coordinates": [-5.5, -3, 0.5, 11, 5, 12], "textureOffset": [0, 15]}
					]
				}
			]
		},
		{
			"part": "body1",
			"id": "body1",
			"invertAxis": "xy",
			"translate": [0, -5.5, 0]
		},
		{
			"part": "right_hind_leg",
			"id": "right_hind_leg",
			"invertAxis": "xy",
			"translate": [-19, -9, -1],
			"textureSize": [64, 32],
			"submodels": [
				{
					"id": "leg3_2",
					"invertAxis": "xy",
					"mirrorTexture": "u",
					"translate": [3, 9, 1],
					"boxes": [
						{"coordinates": [3, -1, -1, 8, 2, 2], "textureOffset": [20, 0]}
					]
				}
			]
		},
		{
			"part": "right_middle_leg",
			"id": "right_middle_leg",
			"invertAxis": "xy",
			"translate": [-19, -9, 2],
			"textureSize": [64, 32],
			"submodels": [
				{
					"id": "leg5_2",
					"invertAxis": "xy",
					"mirrorTexture": "u",
					"translate": [3, 9, -2],
					"boxes": [
						{"coordinates": [3, -1, -1, 8, 2, 2], "textureOffset": [20, 0]}
					]
				}
			]
		},
		{
			"part": "right_front_leg",
			"id": "right_front_leg",
			"invertAxis": "xy",
			"translate": [-19, -9, 5],
			"textureSize": [64, 32],
			"submodels": [
				{
					"id": "leg7_2",
					"invertAxis": "xy",
					"mirrorTexture": "u",
					"translate": [3, 9, -5],
					"boxes": [
						{"coordinates": [3, -1, -1, 8, 2, 2], "textureOffset": [20, 0]}
					]
				}
			]
		},
		{
			"part": "left_hind_leg",
			"id": "left_hind_leg",
			"invertAxis": "xy",
			"translate": [19, -9, -1],
			"textureSize": [64, 32],
			"submodels": [
				{
					"id": "leg4_2",
					"invertAxis": "xy",
					"translate": [-3, 9, 1],
					"boxes": [
						{"coordinates": [-11, -1, -1, 8, 2, 2], "textureOffset": [20, 0]}
					]
				}
			]
		},
		{
			"part": "left_middle_leg",
			"id": "left_middle_leg",
			"invertAxis": "xy",
			"translate": [19, -9, 2],
			"textureSize": [64, 32],
			"submodels": [
				{
					"id": "leg6_2",
					"invertAxis": "xy",
					"translate": [-3, 9, -2],
					"boxes": [
						{"coordinates": [-11, -1, -1, 8, 2, 2], "textureOffset": [20, 0]}
					]
				}
			]
		},
		{
			"part": "left_front_leg",
			"id": "left_front_leg",
			"invertAxis": "xy",
			"translate": [19, -9, 5],
			"textureSize": [64, 32],
			"submodels": [
				{
					"id": "leg8_2",
					"invertAxis": "xy",
					"translate": [-3, 9, -5],
					"boxes": [
						{"coordinates": [-11, -1, -1, 8, 2, 2], "textureOffset": [20, 0]}
					]
				}
			]
		}
	]
}